// Code generated by MockGen. DO NOT EDIT.
// Source: schemas.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	graphql "github.com/graphql-go/graphql"
	reflect "reflect"
)

// MockISchemas is a mock of ISchemas interface
type MockISchemas struct {
	ctrl     *gomock.Controller
	recorder *MockISchemasMockRecorder
}

// MockISchemasMockRecorder is the mock recorder for MockISchemas
type MockISchemasMockRecorder struct {
	mock *MockISchemas
}

// NewMockISchemas creates a new mock instance
func NewMockISchemas(ctrl *gomock.Controller) *MockISchemas {
	mock := &MockISchemas{ctrl: ctrl}
	mock.recorder = &MockISchemasMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockISchemas) EXPECT() *MockISchemasMockRecorder {
	return m.recorder
}

// GenerateNewSchemas mocks base method
func (m *MockISchemas) GenerateNewSchemas() (*graphql.Schema, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateNewSchemas")
	ret0, _ := ret[0].(*graphql.Schema)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateNewSchemas indicates an expected call of GenerateNewSchemas
func (mr *MockISchemasMockRecorder) GenerateNewSchemas() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateNewSchemas", reflect.TypeOf((*MockISchemas)(nil).GenerateNewSchemas))
}
